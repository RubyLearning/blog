<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Book on RubyLearning Blog</title>
    <link>http://rubylearning.com/categories/book/</link>
    <description>Recent content in Book on RubyLearning Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Apr 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://rubylearning.com/categories/book/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Learn Ruby The Hard Way: A Book Review</title>
      <link>http://rubylearning.com/2015/04/27/learn-ruby-the-hard-way-a-book-review/</link>
      <pubDate>Mon, 27 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://rubylearning.com/2015/04/27/learn-ruby-the-hard-way-a-book-review/</guid>
      <description>

&lt;p&gt;A book review of &lt;strong&gt;Learn Ruby the Hard Way - Third Edition&lt;/strong&gt;.&lt;/br&gt;
Review by: RubyLearning’s mentor Victor Goff.&lt;/br&gt;
Book author: Zed A. Shaw.&lt;/br&gt;
Publisher: Addison-Wesley&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Great idea, generally a good book.  Many minor problems or things
taught that may be misrepresented.&lt;/p&gt;

&lt;p&gt;I got this book a while ago, and of course it is available online as well.  And
though it seems like it might be an easy book to review, it is, what I would
call, a “Pattern Book”.  Due to this, it is actually a bit more difficult to
review.&lt;/p&gt;

&lt;p&gt;This book is patterned from his prior “Learn The Hard Way” books, and follows
along with the theme, which is helpful.  I will be reading more of his books,
as once you now the format of one, you can know what to expect from the others.&lt;/p&gt;

&lt;p&gt;As an instructional book, it is teaching you the “hard way”, because you
really need to follow along, it builds up from the basics and gets you to a
good place to continue to learn from.  And it covers a lot.&lt;/p&gt;

&lt;p&gt;It also has a lot of areas to review because of this, a lot of little
technical things.  I went through every exercise, and am now going through
every exercise with someone new to programming.  I believe that the pace is
good for a new programmer.&lt;/p&gt;

&lt;p&gt;I get an impression that the author wrote this while being immersed in another
language.  There are hints of it throughout.  One problem area, which is not
going to be a show stopper, but a problem area nonetheless, is his explanation
about the triple equals in Ruby.  There is no such thing, but he uses it from
the time he introduces it and through the book.  It is little things like this
that can confuse a new programmer in the language, if they even spot it.  If
they spot it, they start to wonder what else is not right.  It can be a pretty
large distraction.&lt;/p&gt;

&lt;p&gt;There are other areas that are difficult though, where he references things
that are not used, but addresses them in the “Questions” section.&lt;/p&gt;

&lt;p&gt;There are things that are initially overlooked. For example, using string
interpolation early on (Exercise 2) but not explaining what it does.  Why does
the math happen in &lt;code&gt;&amp;quot;3 + 2 #{3 + 2}&amp;quot;&lt;/code&gt; inside the brackets?  Sometimes we do
ignore things when instructing but I felt it was fitting to explain at least
briefly what is happening.  I think that is a little too magical to let it be
seen, yet let it not be addressed there.  That is, for a new programmer.  An
experienced one will likely be familiar enough to know.&lt;/p&gt;

&lt;p&gt;There are places were we are told that an error will happen if we do something,
yet doing so does not raise an error.  This can be very time consuming for
someone new to the language.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;gets.chomp.to_i&lt;/code&gt; which I see occasionally in the wild, but it is never
needed together.  (An integer simply will never have a newline, and so you
don&amp;rsquo;t need to remove it before you convert a string with a newline.)  As an
instructional tool, and the third revision, little things like these should be
taken care of.&lt;/p&gt;

&lt;p&gt;There were also various areas where there seems to have been printing problems.
Where there should have been a backslash or two, but there were none.  This
happens when you programmatically format material, but with code, it is
important to leave some things alone.  Pretty sure those errors happen in
printing, not in the proofreading process while the material is written.  This
can be seen in some places where there should have been backslashes that should
be in the literal display, indicated by &amp;ldquo;What you should see&amp;rdquo; sections but were
removed in print.&lt;/p&gt;

&lt;p&gt;The good news is that some of these problems can likely be taken care of in a
pull request.  The distractions are minor if you are teaching, or leading a
group, but reading this alone could be frustrating as you are trying to dig
into what is going on.  Especially since Zed Shaw states in places, to
paraphrase, &amp;ldquo;Don&amp;rsquo;t worry about it right now, just do as I say.&amp;rdquo;  Once that
statement is made, an explicit level of trust being demanded, I believe this
lowers the tolerance of omissions and errors dramatically.&lt;/p&gt;

&lt;p&gt;I would recommend the book for those that are leading a &amp;lsquo;workshop&amp;rsquo; or putting
together some Ruby classes, that can provide the answers when strange things
are presented.  But for those new to Ruby, I can definitely expect some
confusion.  It would be recommended that someone that is familiar with Ruby be
available to answer questions.&lt;/p&gt;

&lt;p&gt;I was surprised to see some of these problems in a &amp;ldquo;Third Edition&amp;rdquo; copy.&lt;/p&gt;

&lt;h2 id=&#34;summary:8c6e18135b493549ef6bad3cd36b4459&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Too many little problems, some outright technical errors, and some not so
helpful printing problems. Somehow it seems to be missing a layer of technical
review, and final proofing.&lt;/p&gt;

&lt;p&gt;I believe it is still a good tool for supervised instruction.&lt;/p&gt;

&lt;p&gt;I can not recommend this book for a new programmer with no quick feedback loop,
someone to ask.  I would not give this book to one of my kids and leave them to
it.  It should work for a programmer just getting into Ruby, but familiar with
other languages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ruby Wizardry - A Book Review</title>
      <link>http://rubylearning.com/2015/03/09/ruby-wizardry---a-book-review/</link>
      <pubDate>Mon, 09 Mar 2015 04:32:42 +0000</pubDate>
      
      <guid>http://rubylearning.com/2015/03/09/ruby-wizardry---a-book-review/</guid>
      <description>

&lt;h3 id=&#34;it-all-starts-at-the-beginning:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;It all starts at the beginning.&lt;/h3&gt;

&lt;p&gt;It really is a whimsical story, about a kingdom in some trouble because
of some mischievous hooligans and how this kingdom is saved by, well,
you will have to read it to see.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rubylearning.com/blog/media/ruby_wizardry_front_cover.png&#34; alt=&#34;Ruby Wizardry&#34; title=&#34;Ruby Wizardry&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;introduction:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This book is written by Eric Weinstein, published by &lt;a href=&#34;http://www.nostarch.com/rubywizardry&#34;&gt;&amp;ldquo;no starch press&amp;rdquo;&lt;/a&gt;
and it is an introduction to programming for kids.&lt;/p&gt;

&lt;h2 id=&#34;troubles-before-we-started:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;Troubles before we started&lt;/h2&gt;

&lt;p&gt;I had problems with reviewing this book, as I showed it to a young
teenager, and I was not able to keep my hands on the book for any
extended period of time.  The book was carried everywhere, and I simply
had to wait for it to find its way back on the table so I could grab it.&lt;/p&gt;

&lt;h2 id=&#34;normal-kid-stuff:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;Normal &amp;ldquo;Kid Stuff&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;Fortunately, they were off to grandma&amp;rsquo;s house this weekend and I finally
got to spend some time with it, and now I see why they are fascinated
with the book.&lt;/p&gt;

&lt;h2 id=&#34;finally-a-review:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;Finally, a review!&lt;/h2&gt;

&lt;p&gt;The story is fun, the code examples are relevant to the story, and Eric
does not hide the documentation from you, occasionally pointing to the
official documentation for more information.  But he doesn&amp;rsquo;t push it on
the reader, so they are welcome to explore and enjoy the book.  In fact,
at the end of the story, the excitement of having done all of this
journey is celebrated, and additional references are presented right
there to continue this journey with other resources.  There is no, &amp;ldquo;OK,
what can I do now?  Because that was fun!&amp;rdquo;  You have the additional
steps laid out.  No, it is just &amp;ldquo;That was fun, let&amp;rsquo;s continue!&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;eric-has-style:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;Eric has Style!&lt;/h2&gt;

&lt;p&gt;He has a coding style that he adheres to throughout the book, this makes
the learning simpler as you aren&amp;rsquo;t questioning why things have changed.
He also encourages using the Interactive Ruby (IRB) tool for exploring,
as well as writing the programs in the files that you can run as well.&lt;/p&gt;

&lt;p&gt;The progression is simple, the &amp;lsquo;what comes first&amp;rsquo; obstacle is taken care
of early, so you have the IRB tool and the code that you write taken
care of up front.  How to manage and play with your code interactively,
how to explore Ruby, and about two thirds of the way through the story
you find out how to require the files you write into your IRB session.
Overall, a great basis for continued progress as a programmer.&lt;/p&gt;

&lt;h2 id=&#34;the-journey:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;The journey.&lt;/h2&gt;

&lt;p&gt;As you journey through the book, you will have progressively done
increasingly &amp;ldquo;hard&amp;rdquo; things, but I don&amp;rsquo;t think you will really notice it.
You will have created interactive programs, will have manipulated files,
will have written the most basic web page.&lt;/p&gt;

&lt;p&gt;One thing that I was very happy to find in this book after the first
Table of Contents is the &amp;ldquo;Contents in Detail&amp;rdquo; section.  Finding the
review points in this book is extremely easy, and if you need to
review something, you can easily find the things you are looking for.&lt;/p&gt;

&lt;h2 id=&#34;to-the-future:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;To the future!&lt;/h2&gt;

&lt;p&gt;I was looking forward to reviewing this book, and now I am looking forward
to the time when that young teenager comes up to me and says &amp;ldquo;Hey, you
could write that this way!&amp;rdquo;  And that time is coming up soon.&lt;/p&gt;

&lt;h2 id=&#34;and-finally:e6fe5e88f71fd2ba6db1ee63e7b912f3&#34;&gt;And finally&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Thank you Eric for a wonderful story, and this book will let kids
realize that they can do it! Just like Byte, Compute, A.N.A.L.O.G., ROM,
Antic magazines, I can see this book mentioned years to come as
this generation reminisces about how they learned to program.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>